{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Auto Tag Test Suite (Open Source by GorillaStack)",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::KeyPair::KeyName>",
      "Default": "/AutoTagTest/KeyName"
    },
    "AmiImageId": {
      "Description": "Name of the AWS AMI Image ID",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/AutoTagTest/AmiImageId"
    },
    "VpcCidrBlock": {
      "Description": "VPC CIDR block for the main VPC",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/AutoTagTest/VpcCidrBlock"
    },
    "SubnetCidrBlocks": {
      "Description": "Code for the Availability Zone to use for the Volume",
      "Type": "AWS::SSM::Parameter::Value<CommaDelimitedList>",
      "Default": "/AutoTagTest/SubnetCidrBlocks"
    },
    "VpcCidrBlockForVpcPeering": {
      "Description": "VPC CDIR block that is created to test VPC Peering",
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/AutoTagTest/VpcCidrBlockForVpcPeering"
    }
  },
  "Resources": {
    "AutoTagTestSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestSecurityGroup"
          }
        ],
        "GroupDescription": "AutoTag Test Group",
        "VpcId": {
          "Ref": "AutoTagTestVPC"
        },
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "AutoTagTestLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "AmiImageId"
        },
        "InstanceType": "t2.nano",
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroups": [
          {
            "Ref": "AutoTagTestSecurityGroup"
          }
        ]
      }
    },
    "AutoTagTestAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestAutoScalingGroup",
            "PropagateAtLaunch": true
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "AutoTagTestLaunchConfiguration"
        },
        "DesiredCapacity": 1,
        "MinSize": 1,
        "MaxSize": 1,
        "VPCZoneIdentifier": [
          {
            "Ref": "AutoTagTestSubnetNAT1"
          }
        ],
        "HealthCheckType": "EC2"
      }
    },
    "AutoTagTestInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestInstance"
          }
        ],
        "ImageId": {
          "Ref": "AmiImageId"
        },
        "InstanceType": "t2.nano",
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroupIds": [
          {
            "Ref": "AutoTagTestSecurityGroup"
          }
        ],
        "SubnetId": {
          "Ref": "AutoTagTestSubnetNAT1"
        }
      }
    },
    "AutoTagTestVolume": {
      "Type": "AWS::EC2::Volume",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestVolume"
          }
        ],
        "AvailabilityZone": {
          "Fn::Sub": "${AWS::Region}b"
        },
        "Size": 1
      }
    },
    "AutoTagTestElasticIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "AutoTagTestSubnetNAT1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestSubnetNAT1"
          }
        ],
        "CidrBlock": {
          "Fn::Select": [
            0,
            {
              "Ref": "SubnetCidrBlocks"
            }
          ]
        },
        "VpcId": {
          "Ref": "AutoTagTestVPC"
        },
        "AvailabilityZone": {
          "Fn::Sub": "${AWS::Region}b"
        }
      }
    },
    "AutoTagTestSubnetNAT2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestSubnetNAT2"
          }
        ],
        "CidrBlock": {
          "Fn::Select": [
            1,
            {
              "Ref": "SubnetCidrBlocks"
            }
          ]
        },
        "VpcId": {
          "Ref": "AutoTagTestVPC"
        },
        "AvailabilityZone": {
          "Fn::Sub": "${AWS::Region}c"
        }
      }
    },
    "AutoTagTestSubnetIGW": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestSubnetIGW"
          }
        ],
        "CidrBlock": {
          "Fn::Select": [
            2,
            {
              "Ref": "SubnetCidrBlocks"
            }
          ]
        },
        "VpcId": {
          "Ref": "AutoTagTestVPC"
        },
        "AvailabilityZone": {
          "Fn::Sub": "${AWS::Region}c"
        }
      }
    },
    "AutoTagTestVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestVPC"
          }
        ],
        "CidrBlock": {
          "Ref": "VpcCidrBlock"
        }
      }
    },
    "AutoTagTestVPCForVpcPeering": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestVPCForVpcPeering"
          }
        ],
        "CidrBlock": {
          "Ref": "VpcCidrBlockForVpcPeering"
        }
      }
    },
    "AutoTagTestIGW": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestIGW"
          }
        ]
      }
    },
    "AutoTagTestVPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "AutoTagTestIGW"
        },
        "VpcId": {
          "Ref": "AutoTagTestVPC"
        }
      }
    },
    "AutoTagTestENI": {
      "Type": "AWS::EC2::NetworkInterface",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestENI"
          }
        ],
        "SubnetId": {
          "Ref": "AutoTagTestSubnetNAT1"
        }
      }
    },
    "AutoTagTestELBV1": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestELBV1"
          }
        ],
        "Scheme": "internal",
        "Subnets": [
          {
            "Ref": "AutoTagTestSubnetNAT1"
          }
        ],
        "Listeners": [
          {
            "InstancePort": 80,
            "LoadBalancerPort": 80,
            "Protocol": "HTTP"
          }
        ]
      }
    },
    "AutoTagTestELBV2": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestELBV2"
          }
        ],
        "Scheme": "internal",
        "Subnets": [
          {
            "Ref": "AutoTagTestSubnetNAT1"
          }
        ],
        "Type": "network"
      }
    },
    "AutoTagTestRDSInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestRDSInstance"
          }
        ],
        "DBInstanceClass": "db.t2.micro",
        "Engine": "postgres",
        "AllocatedStorage": 20,
        "PubliclyAccessible": false,
        "MasterUsername": "AutoTagTestRDS",
        "MasterUserPassword": "asdfasdf!!!!",
        "VPCSecurityGroups": [
          {
            "Ref": "AutoTagTestSecurityGroup"
          }
        ],
        "DBSubnetGroupName": {
          "Ref": "AutoTagTestRDSDBSubnetGroup"
        }
      }
    },
    "AutoTagTestRDSDBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestRDSDBSubnetGroup"
          }
        ],
        "DBSubnetGroupDescription": "AutoTagTestRDSDBSubnetGroup",
        "SubnetIds": [
          {
            "Ref": "AutoTagTestSubnetNAT1"
          },
          {
            "Ref": "AutoTagTestSubnetNAT2"
          }
        ]
      }
    },
    "AutoTagTestS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestS3Bucket"
          }
        ]
      }
    },
    "AutoTagTestEMRCluster": {
      "Type": "AWS::EMR::Cluster",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestEMRCluster"
          }
        ],
        "Instances": {
          "Ec2KeyName": {
            "Ref": "KeyName"
          },
          "MasterInstanceGroup": {
            "InstanceCount": 1,
            "InstanceType": "c1.medium",
            "Market": "ON_DEMAND",
            "Name": "Master"
          },
          "CoreInstanceGroup": {
            "InstanceCount": 1,
            "InstanceType": "c1.medium",
            "Market": "ON_DEMAND",
            "Name": "Core"
          }
        },
        "Name": "AutoTestTestCluster",
        "JobFlowRole": {
          "Ref": "AutoTagTestEMRInstanceProfile"
        },
        "ServiceRole": {
          "Ref": "AutoTagTestEMRRole"
        },
        "ReleaseLabel": "emr-5.3.0",
        "VisibleToAllUsers": true
      }
    },
    "AutoTagTestEMRRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "elasticmapreduce.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole"
        ],
        "Path": "/"
      }
    },
    "AutoTagTestEMRRoleForEC2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role"
        ],
        "Path": "/"
      }
    },
    "AutoTagTestEMRInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "AutoTagTestEMRRoleForEC2"
          }
        ]
      }
    },
    "AutoTagTestDynamoDBTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestDynamoDBTable"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "NodeID",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "NodeID",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        }
      }
    },
    "AutoTagTestNatGateway": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestNatGateway"
          }
        ],
        "AllocationId": {
          "Fn::GetAtt": [
            "AutoTagTestElasticIP",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "AutoTagTestSubnetNAT1"
        }
      }
    },
    "AutoTagTestNetworkACL": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestNetworkACL"
          }
        ],
        "VpcId": {
          "Ref": "AutoTagTestVPC"
        }
      }
    },
    "AutoTagTestRouteTableNAT": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestRouteTableNAT"
          }
        ],
        "VpcId": {
          "Ref": "AutoTagTestVPC"
        }
      }
    },
    "AutoTagTestRouteTableIGW": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestRouteTableIGW"
          }
        ],
        "VpcId": {
          "Ref": "AutoTagTestVPC"
        }
      }
    },
    "AutoTagTestRouteNAT": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "AutoTagTestNatGateway"
        },
        "RouteTableId": {
          "Ref": "AutoTagTestRouteTableNAT"
        }
      }
    },
    "AutoTagTestRouteIGW": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "AutoTagTestIGW"
        },
        "RouteTableId": {
          "Ref": "AutoTagTestRouteTableIGW"
        }
      }
    },
    "AutoTagTestSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AutoTagTestSubnetNAT1"
        },
        "RouteTableId": {
          "Ref": "AutoTagTestRouteTableNAT"
        }
      }
    },
    "AutoTagTestSubnetRouteTableAssociation1b": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AutoTagTestSubnetNAT2"
        },
        "RouteTableId": {
          "Ref": "AutoTagTestRouteTableNAT"
        }
      }
    },
    "AutoTagTestSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "AutoTagTestSubnetIGW"
        },
        "RouteTableId": {
          "Ref": "AutoTagTestRouteTableIGW"
        }
      }
    },
    "AutoTagTestVpcPeeringConnection": {
      "Type": "AWS::EC2::VPCPeeringConnection",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestVpcPeeringConnection"
          }
        ],
        "VpcId": {
          "Ref": "AutoTagTestVPC"
        },
        "PeerVpcId": {
          "Ref": "AutoTagTestVPCForVpcPeering"
        }
      }
    },
    "AutoTagTestCustomerGateway": {
      "Type": "AWS::EC2::CustomerGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestCustomerGateway"
          }
        ],
        "BgpAsn": 10000,
        "IpAddress": "1.1.1.1",
        "Type": "ipsec.1"
      }
    },
    "AutoTagTestVPNGateway": {
      "Type": "AWS::EC2::VPNGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestVPNGateway"
          }
        ],
        "Type": "ipsec.1"
      }
    },
    "AutoTagTestVPNConnection": {
      "Type": "AWS::EC2::VPNConnection",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestVPNConnection"
          }
        ],
        "Type": "ipsec.1",
        "CustomerGatewayId": {
          "Ref": "AutoTagTestCustomerGateway"
        },
        "StaticRoutesOnly": true,
        "VpnGatewayId": {
          "Ref": "AutoTagTestVPNGateway"
        }
      }
    },
    "AutoTagTestOpsworksStack": {
      "Type": "AWS::OpsWorks::Stack",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestOpsworksStack"
          }
        ],
        "VpcId": {
          "Ref": "AutoTagTestVPC"
        },
        "DefaultSubnetId": {
          "Ref": "AutoTagTestSubnetNAT1"
        },
        "DefaultInstanceProfileArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              {
                "Ref": "AWS::AccountId"
              },
              ":instance-profile/aws-opsworks-ec2-role"
            ]
          ]
        },
        "ServiceRoleArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:iam::",
              {
                "Ref": "AWS::AccountId"
              },
              ":role/aws-opsworks-service-role"
            ]
          ]
        },
        "DefaultOs": "Amazon Linux 2017.09",
        "Name": "AutoTagTestOpsworksStack"
      }
    },
    "AutoTagTestOpsworksLayer": {
      "Type": "AWS::OpsWorks::Layer",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestOpsworksLayer"
          }
        ],
        "AutoAssignElasticIps": true,
        "AutoAssignPublicIps": false,
        "EnableAutoHealing": false,
        "Name": "AutoTagTestOpsworksLayer1",
        "Shortname": "AutoTagTestLayer1",
        "StackId": {
          "Ref": "AutoTagTestOpsworksStack"
        },
        "Type": "nodejs-app"
      }
    },
    "AutoTagTestOpsworksInstance": {
      "Type": "AWS::OpsWorks::Instance",
      "Properties": {
        "InstanceType": "m3.medium",
        "LayerIds": [
          {
            "Ref": "AutoTagTestOpsworksLayer"
          }
        ],
        "StackId": {
          "Ref": "AutoTagTestOpsworksStack"
        },
        "SubnetId": {
          "Ref": "AutoTagTestSubnetIGW"
        },
        "SshKeyName": {
          "Ref": "KeyName"
        },
        "InstallUpdatesOnBoot": false
      }
    },
    "AutoTagTestDataPipeline": {
      "Type": "AWS::DataPipeline::Pipeline",
      "Properties": {
        "PipelineTags": [
          {
            "Key": "Name",
            "Value": "AutoTagTestPipeline"
          }
        ],
        "Activate": false,
        "Name": "AutoTagTestDataPipeline",
        "PipelineObjects": [
          {
            "Id": "Ec2InstanceStart",
            "Name": "Ec2InstanceStart",
            "Fields": [
              {
                "Key": "type",
                "StringValue": "Ec2Resource"
              },
              {
                "Key": "terminateAfter",
                "StringValue": "10 Minutes"
              },
              {
                "Key": "instanceType",
                "StringValue": "t2.nano"
              },
              {
                "Key": "resourceRole",
                "StringValue": "DataPipelineDefaultResourceRole"
              },
              {
                "Key": "role",
                "StringValue": "DataPipelineDefaultRole"
              },
              {
                "Key": "schedule",
                "RefValue": "DefaultSchedule"
              }
            ]
          },
          {
            "Id": "DefaultSchedule",
            "Name": "RunOnce",
            "Fields": [
              {
                "Key": "occurrences",
                "StringValue": "1"
              },
              {
                "Key": "startAt",
                "StringValue": "FIRST_ACTIVATION_DATE_TIME"
              },
              {
                "Key": "type",
                "StringValue": "Schedule"
              },
              {
                "Key": "period",
                "StringValue": "1 Day"
              }
            ]
          }
        ]
      }
    }
  }
}
